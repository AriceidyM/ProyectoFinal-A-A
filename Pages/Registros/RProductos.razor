@page "/Productos"
@page "/rProductos/{ProductoId:int}"

<h3>Registro de Productos</h3>

<EditForm Model="Producto" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
                
    <div class="form-group">
        <label for="IdInput">ClienteId</label>
        <InputNumber Id="IdInput" @bind-Value="Producto.ProductoId" class="form-inline"></InputNumber>
        <button type="button" class="btn btn-outline-info" @onclick="Buscar">Buscar</button>
    </div>
               
                <div class="form-group">
                    <label for="FechaInput">Fecha</label>
                    <InputDate Id="FechaInput" @bind-Value="Producto.Fecha" class="form-inline"></InputDate>
                </div>

            <label for="descripcion">Descripcion</label>
            <div class="input">
                <InputText @bind-Value="@Producto.Descripcion" class="form-inline" placeholder="Descripcion" />
                <ValidationMessage For="@(()=>Producto.Descripcion)" />
            </div>

            <label for="Categoria">Categoria</label>
            <div class="input">
                <InputSelect @bind-Value="@CategoriaSelect" class="form-inline " @onchange="CargarCategoria" @onclick="CargarCategoria">
                    <option value="" disabled selected>Seleccione una Categoria</option>
                    @foreach (var item in ListaCategoria)
                    {
                        <option value="@item.CategoriaId">@item.Nombre</option>
                    }
                </InputSelect>
            </div>

                <label for="Existencia">Existencia</label>
                <div class="input">
                    <InputNumber @bind-Value="@Producto.Existencia" class= "form-inline"  ReadOnly="true" @onchange="CargarCantidad" @onclick="CargarCantidad"/>
                    <ValidationMessage For="@(()=>Producto.Existencia)" />
                </div>

             <label for="precio">Precio</label>
                 <div class="input">
                    <InputNumber @bind-Value="@Producto.Precio" class="form-inline" />
                    <ValidationMessage For="@(()=>Producto.Precio)" />
                 </div>

                <br />
                <br />
                <div class="input-field col s6">
                    <button type="button" class="btn btn-outline-primary" @onclick="Limpiar">Limpiar</button>
                    <button type="submit" class="btn btn-outline-success">Guardar</button>
                    <button type="button" class="btn btn-outline-danger" @onclick="Eliminar">Eliminar</button>
                </div>

                <h5 class="text-success">@mensaje</h5>
</EditForm>

@code {

    [Parameter]
    public int ProductoId { get; set; }

    protected override void OnInitialized()
    {
        Producto = new Productos();
        ListaCategoria = categoriaController.GetList(e => true);
        Categoria = new CategoriaProductos();
        Entrada = new Entrada();

        if (ProductoId != 0)
        {
            Producto.ProductoId = ProductoId;
            Buscar();
        }
    }

    Productos Producto { get; set; }
    string mensaje;
    public string CategoriaSelect;

    private List<CategoriaProductos> ListaCategoria = new List<CategoriaProductos>();

    private CategoriaProductos Categoria { get; set; }

    private Entrada Entrada { get; set; }

    CategoriaProductoController categoriaController = new CategoriaProductoController();

    ProductoController controller = new ProductoController();

    public void Guardar()
    {
        if (controller.Guardar(Producto))
        {
            Limpiar();
            mensaje = "Producto Guardado con Exito!!!";
        }
        else
        {
            Limpiar();
            mensaje = "Error al guardar Producto";
        }
    }

    public void Buscar()
    {
        var producto = controller.Buscar(Producto.ProductoId);

        if (producto != null)
        {
            Producto = producto;
        }
        else
        {
            Limpiar();
            mensaje = "Producto no Existe";
        }
    }

    public void Eliminar()
    {
        var producto = controller.Buscar(Producto.ProductoId);

        if (producto != null)
        {
            controller.Eliminar(Producto.ProductoId);
            Limpiar();
            mensaje = "Producto Eliminado";
        }
        else
        {
            Limpiar();
            mensaje = "Error al eliminar";
        }
    }

    public void Limpiar()
    {
        this.Producto = new Productos();
        mensaje = "";
        CategoriaSelect = "";
    }

    private void CargarCantidad()
    {
        try
        {
            //Entrada = EntradaController.Buscar(Convert.ToInt32());
        }
        catch (Exception ex)
        {
            mensaje = ex.ToString();
        }
    }

    private void CargarCategoria()
    {
        try
        {
            Categoria = categoriaController.Buscar(Convert.ToInt32(CategoriaSelect));
        }
        catch (Exception ex)
        {
            mensaje = ex.ToString();
        }
    }
}
